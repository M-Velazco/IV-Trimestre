{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AgregarComponent = class AgregarComponent {\n  constructor(MateriasServicio, location) {\n    this.MateriasServicio = MateriasServicio;\n    this.location = location;\n    this.Materias = [];\n    this.Materia = {\n      idMateria: 0,\n      Nom_materia: \"\"\n    };\n  }\n  ngOnInit() {\n    this.Read();\n  }\n  Create() {\n    this.MateriasServicio.Create(this.Materia).subscribe(datos => {\n      if (datos['resultado'] == 'OK') {\n        alert(datos['mensaje']);\n        this.Read(); // Actualizar la lista después de la creación\n        this.location.go(this.location.path(true));\n      } else {\n        // Manejar casos de error aquí\n        console.error('Error en la creación:', datos['mensaje']);\n      }\n    }, error => {\n      // Manejar errores de la solicitud HTTP aquí\n      console.error('Error en la solicitud HTTP:', error);\n    });\n  }\n  Read() {\n    this.MateriasServicio.Read().subscribe(result => {\n      this.Materias = result;\n    }, error => {\n      // Manejar errores de la solicitud HTTP aquí\n      console.error('Error en la solicitud HTTP:', error);\n    });\n  }\n  hayRegistros() {\n    // Lógica para determinar si hay registros\n    return this.Materias.length > 0;\n  }\n};\nAgregarComponent = __decorate([Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.component.html',\n  styleUrls: ['./agregar.component.css']\n})], AgregarComponent);","map":{"version":3,"names":["Component","AgregarComponent","constructor","MateriasServicio","location","Materias","Materia","idMateria","Nom_materia","ngOnInit","Read","Create","subscribe","datos","alert","go","path","console","error","result","hayRegistros","length","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\wamp64\\www\\iv-Trimestre\\materias\\src\\app\\agregar\\agregar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { MateriasService } from '../materias.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-agregar',\r\n  templateUrl: './agregar.component.html',\r\n  styleUrls: ['./agregar.component.css']\r\n})\r\nexport class AgregarComponent {\r\n  Materias: any[] = [];\r\n\r\n  Materia = {\r\n    idMateria: 0,\r\n    Nom_materia: \"\"\r\n  };\r\n\r\n  constructor(private MateriasServicio: MateriasService, private location: Location) {}\r\n\r\n  ngOnInit() {\r\n    this.Read();\r\n  }\r\n\r\n  Create() {\r\n    this.MateriasServicio.Create(this.Materia).subscribe(\r\n      (datos: any) => {\r\n        if (datos['resultado'] == 'OK') {\r\n          alert(datos['mensaje']);\r\n          this.Read(); // Actualizar la lista después de la creación\r\n          this.location.go(this.location.path(true));\r\n        } else {\r\n          // Manejar casos de error aquí\r\n          console.error('Error en la creación:', datos['mensaje']);\r\n        }\r\n      },\r\n      error => {\r\n        // Manejar errores de la solicitud HTTP aquí\r\n        console.error('Error en la solicitud HTTP:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  Read() {\r\n    this.MateriasServicio.Read().subscribe(\r\n      (result: any) => {\r\n        this.Materias = result;\r\n      },\r\n      error => {\r\n        // Manejar errores de la solicitud HTTP aquí\r\n        console.error('Error en la solicitud HTTP:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  hayRegistros() {\r\n    // Lógica para determinar si hay registros\r\n    return this.Materias.length > 0;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAQ3BC,YAAoBC,gBAAiC,EAAUC,QAAkB;IAA7D,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAA2B,KAAAC,QAAQ,GAARA,QAAQ;IAPvE,KAAAC,QAAQ,GAAU,EAAE;IAEpB,KAAAC,OAAO,GAAG;MACRC,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE;KACd;EAEmF;EAEpFC,QAAQA,CAAA;IACN,IAAI,CAACC,IAAI,EAAE;EACb;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACR,gBAAgB,CAACQ,MAAM,CAAC,IAAI,CAACL,OAAO,CAAC,CAACM,SAAS,CACjDC,KAAU,IAAI;MACb,IAAIA,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;QAC9BC,KAAK,CAACD,KAAK,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAACH,IAAI,EAAE,CAAC,CAAC;QACb,IAAI,CAACN,QAAQ,CAACW,EAAE,CAAC,IAAI,CAACX,QAAQ,CAACY,IAAI,CAAC,IAAI,CAAC,CAAC;OAC3C,MAAM;QACL;QACAC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEL,KAAK,CAAC,SAAS,CAAC,CAAC;;IAE5D,CAAC,EACDK,KAAK,IAAG;MACN;MACAD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEAR,IAAIA,CAAA;IACF,IAAI,CAACP,gBAAgB,CAACO,IAAI,EAAE,CAACE,SAAS,CACnCO,MAAW,IAAI;MACd,IAAI,CAACd,QAAQ,GAAGc,MAAM;IACxB,CAAC,EACDD,KAAK,IAAG;MACN;MACAD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEAE,YAAYA,CAAA;IACV;IACA,OAAO,IAAI,CAACf,QAAQ,CAACgB,MAAM,GAAG,CAAC;EACjC;CACD;AAjDYpB,gBAAgB,GAAAqB,UAAA,EAL5BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWxB,gBAAgB,CAiD5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}