{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../materias.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nexport class AgregarComponent {\n  constructor(MateriasServicio, location) {\n    this.MateriasServicio = MateriasServicio;\n    this.location = location;\n    this.Materias = [];\n    this.Materia = {\n      idMateria: 0,\n      Nom_materia: \"\"\n    };\n  }\n  ngOnInit() {\n    this.Read();\n  }\n  Create() {\n    this.MateriasServicio.Create(this.Materia).subscribe(datos => {\n      if (datos['resultado'] == 'OK') {\n        alert(datos['mensaje']);\n        this.Read(); // Actualizar la lista después de la creación\n        this.location.go(this.location.path(true));\n      } else {\n        // Manejar casos de error aquí\n        console.error('Error en la creación:', datos['mensaje']);\n      }\n    }, error => {\n      // Manejar errores de la solicitud HTTP aquí\n      console.error('Error en la solicitud HTTP:', error);\n    });\n  }\n  Read() {\n    this.MateriasServicio.Read().subscribe(result => {\n      this.Materias = result;\n    }, error => {\n      // Manejar errores de la solicitud HTTP aquí\n      console.error('Error en la solicitud HTTP:', error);\n    });\n  }\n  hayRegistros() {\n    // Lógica para determinar si hay registros\n    return this.Materias.length > 0;\n  }\n  static #_ = this.ɵfac = function AgregarComponent_Factory(t) {\n    return new (t || AgregarComponent)(i0.ɵɵdirectiveInject(i1.MateriasService), i0.ɵɵdirectiveInject(i2.Location));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AgregarComponent,\n    selectors: [[\"app-agregar\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[\"action\", \"\"], [\"type\", \"number\", \"name\", \"idmaterias\", \"id\", \"idmaterias\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"Name\", \"id\", \"Name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"]],\n    template: function AgregarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"div\")(2, \"p\");\n        i0.ɵɵtext(3, \" codigo:\");\n        i0.ɵɵelementStart(4, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function AgregarComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.Materia.idMateria = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \" Nombre de materia:\");\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AgregarComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.Materia.Nom_materia = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\")(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AgregarComponent_Template_button_click_9_listener() {\n          return ctx.Create();\n        });\n        i0.ɵɵtext(10, \"a\\u00F1adir\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.Materia.idMateria);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.Materia.Nom_materia);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AgregarComponent","constructor","MateriasServicio","location","Materias","Materia","idMateria","Nom_materia","ngOnInit","Read","Create","subscribe","datos","alert","go","path","console","error","result","hayRegistros","length","_","i0","ɵɵdirectiveInject","i1","MateriasService","i2","Location","_2","selectors","decls","vars","consts","template","AgregarComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵlistener","AgregarComponent_Template_input_ngModelChange_4_listener","$event","ɵɵelementEnd","AgregarComponent_Template_input_ngModelChange_7_listener","AgregarComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\wamp64\\www\\iv-Trimestre\\materias\\src\\app\\agregar\\agregar.component.ts","C:\\wamp64\\www\\iv-Trimestre\\materias\\src\\app\\agregar\\agregar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { MateriasService } from '../materias.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-agregar',\r\n  templateUrl: './agregar.component.html',\r\n  styleUrls: ['./agregar.component.css']\r\n})\r\nexport class AgregarComponent {\r\n  Materias: any[] = [];\r\n\r\n  Materia = {\r\n    idMateria: 0,\r\n    Nom_materia: \"\"\r\n  };\r\n\r\n  constructor(private MateriasServicio: MateriasService, private location: Location) {}\r\n\r\n  ngOnInit() {\r\n    this.Read();\r\n  }\r\n\r\n  Create() {\r\n    this.MateriasServicio.Create(this.Materia).subscribe(\r\n      (datos: any) => {\r\n        if (datos['resultado'] == 'OK') {\r\n          alert(datos['mensaje']);\r\n          this.Read(); // Actualizar la lista después de la creación\r\n          this.location.go(this.location.path(true));\r\n        } else {\r\n          // Manejar casos de error aquí\r\n          console.error('Error en la creación:', datos['mensaje']);\r\n        }\r\n      },\r\n      error => {\r\n        // Manejar errores de la solicitud HTTP aquí\r\n        console.error('Error en la solicitud HTTP:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  Read() {\r\n    this.MateriasServicio.Read().subscribe(\r\n      (result: any) => {\r\n        this.Materias = result;\r\n      },\r\n      error => {\r\n        // Manejar errores de la solicitud HTTP aquí\r\n        console.error('Error en la solicitud HTTP:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  hayRegistros() {\r\n    // Lógica para determinar si hay registros\r\n    return this.Materias.length > 0;\r\n  }\r\n}\r\n","<form action=\"\"></form>\r\n<div>\r\n    <p>\r\n        codigo:<input type=\"number\" [(ngModel)]=\"Materia.idMateria\" name=\"idmaterias\" id=\"idmaterias\"/>\r\n      </p>\r\n      <p>\r\n        Nombre de materia:<input type=\"text\" [(ngModel)]=\"Materia.Nom_materia\" name=\"Name\" id=\"Name\"/>\r\n      </p>\r\n    <p><button type=\"button\" class=\"btn btn-outline-success\"(click)=\"Create()\" >añadir</button></p>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}